definitions:
  models.ErrorResponse:
    properties:
      action:
        type: string
      error:
        type: string
    type: object
  models.Omnibus:
    properties:
      LastUpdated:
        description: Last Update on Info
        type: string
      amazonurl:
        description: URL to Amazon
        type: string
      cgnurl:
        description: URL to CDN
        type: string
      code:
        description: A distributor SKU code
        type: string
      imgpath:
        description: Path to the image file
        type: string
      isturl:
        description: URL to IST
        type: string
      name:
        description: Name of the omnibus
        type: string
      pagecount:
        description: Total number of pages
        type: integer
      price:
        description: Price of the omnibus
        type: number
      publisher:
        description: Publisher of the omnibus
        type: string
      releaseddate:
        description: Creation date
        type: string
      status:
        description: Hot , Cold , Archive
        type: string
      upc:
        description: Universal Product Code
        type: string
      version:
        description: Standard or DM version
        type: string
    type: object
  models.SuccessDataResponse:
    properties:
      action:
        type: string
      failed:
        items:
          $ref: '#/definitions/models.Omnibus'
        type: array
      inserted:
        items:
          type: string
        type: array
    type: object
  models.SuccessResponse:
    properties:
      action:
        type: string
      bucketname:
        type: string
      objectname:
        type: string
    type: object
info:
  contact: {}
paths:
  /minio/deleteImage:
    delete:
      consumes:
      - application/json
      description: Get a file from MinIO storage
      parameters:
      - description: User calling api
        in: query
        name: TaskUser
        required: true
        type: string
      - description: The name of the minio bucket
        in: query
        name: BucketNameKey
        required: true
        type: string
      - description: The name of the object with extension in minio eg image.png
        in: query
        name: ObjectNameKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a file from MinIO
      tags:
      - minio
  /minio/getImage:
    get:
      consumes:
      - application/json
      description: Get a file from MinIO storage
      parameters:
      - description: User calling api
        in: query
        name: TaskUser
        required: true
        type: string
      - description: The name of the minio bucket
        in: query
        name: BucketNameKey
        required: true
        type: string
      - description: The name of the object with extension in minio eg image.png
        in: query
        name: ObjectNameKey
        required: true
        type: string
      produces:
      - image/png
      - image/jpeg
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a file from MinIO
      tags:
      - minio
  /minio/uploadImage:
    post:
      consumes:
      - image/png
      - image/jpeg
      description: Upload a file to MinIO storage
      parameters:
      - description: User calling api
        in: query
        name: TaskUser
        required: true
        type: string
      - description: File to be uploaded
        in: formData
        name: file
        required: true
        type: file
      - description: The name of the minio bucket
        in: query
        name: BucketNameKey
        required: true
        type: string
      - description: File extension (e.g., png, jpeg)
        in: formData
        name: extension
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Upload a file to MinIO
      tags:
      - minio
  /postgresql/uploadInfo:
    post:
      consumes:
      - application/json
      description: Upload an array of items (Omnibus) to the PostgreSQL database
      parameters:
      - description: User calling the API
        in: query
        name: TaskUser
        required: true
        type: string
      - description: Array of items to upload
        in: body
        name: sales
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Omnibus'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessDataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Upload data to PostgreSQL
      tags:
      - postgres
swagger: "2.0"
